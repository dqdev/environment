# ---------------Prefix----------------
unbind C-b
set-option -g prefix F10 
bind-key F10 send-prefix


# ---------------Windows----------------
bind -n C-t new-window
bind -n C-w killp

bind -n S-Left previous-window
bind -n S-Right next-window

bind -r [ previous-window
bind -r ] next-window

bind -n C-[ previous-window
bind -n C-] next-window

bind s command-prompt -I "#W" "rename-window '%%'"
bind S command-prompt -I "#S" "rename-session '%%'"


# ---------------Panes----------------.
# Creat splits
bind - split-window -c '#{pane_current_path}' -v
bind | split-window -c '#{pane_current_path}' -h

bind Left split-window -b
bind Right split-window -h
bind Up split-window -d
bind Down split-window -v

bind H split-window -c '#{pane_current_path}' -b
bind L split-window -c '#{pane_current_path}' -h
bind K split-window -c '#{pane_current_path}' -d
bind J split-window -c '#{pane_current_path}' -v

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Control-Arrow Move Cursor to Panes
bind -n C-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Alt-Arrow resize pane by 3 chars
bind -n M-Left resize-pane -L 3
bind -n M-Right resize-pane -R 3
bind -n M-Down resize-pane -D 3
bind -n M-Up resize-pane -U 3

# Alt-hjkl resize pane by 3 chars
bind -n M-h resize-pane -L 3
bind -n M-l resize-pane -R 3
bind -n M-j resize-pane -D 3
bind -n M-k resize-pane -U 3


# ---------------Copy Mode----------------
# use vi keys
setw -g mode-keys vi
set -s escape-time 0

bind F10 copy-mode
bind -t vi-copy 'v' begin-selection

# xclip syncs system clipboard with the tmux one
bind -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
bind p paste-buffer

# ---------------Misc----------------
set -g mouse on
set-option -g allow-rename on #Don't override window names

set-option -g default-command bash

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# reload tmux file
bind r source-file ~/.tmux.conf \; display-message 'tmux config reloaded!'

# Terminal emulator window title
set -g set-titles on

set -g terminal-overrides 'xterm:colors=256'
set -g base-index 1     # because default 0 key is a long way from 1
setw -g pane-base-index 1

# status stuff
set -g status-position bottom
set -g status-interval 60

# link debugger with vim
bind l pipe-pane -o '$HOME/.tmux/dbg' \

# ---------------Plugins----------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'


# ---------------Color----------------
# window status
source "$HOME/.tmux/tmux_status.conf"


# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1


# ---------------Initialize TPM----------------
run '~/.tmux/plugins/tpm/tpm'

